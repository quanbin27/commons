syntax = "proto3";
option go_package = "github.com/quanbin27/commons/genproto/users";
import "google/protobuf/timestamp.proto";
service UserService{
  rpc Register(RegisterRequest) returns (RegisterResponse){}
  rpc Login(LoginRequest) returns (LoginResponse){}
  rpc ChangeInfo(ChangeInfoRequest) returns (ChangeInfoResponse){}
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse){}
  rpc GetUserInfo(GetUserInfoRequest) returns (User){}
  rpc GetUserInfoByEmail(GetUserInfoByEmailRequest) returns (User){}
  rpc VerifyEmail(VerifyEmailRequest) returns (VerifyEmailResponse) {}
  rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse){}
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse){}
  rpc GetAllCustomers(GetAllCustomersRequest) returns (GetAllCustomersResponse) {}
  rpc GetCustomersPaginated(GetCustomersPaginatedRequest) returns (GetCustomersPaginatedResponse) {}
  rpc GetCustomersByName(GetCustomersByNameRequest) returns (GetCustomersByNameResponse) {}
  rpc GetBranchByEmployeeID(GetBranchByEmployeeIDRequest) returns (GetBranchByEmployeeIDResponse) {}
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse) {}
  rpc EditUser(EditUserRequest) returns (EditUserResponse) {}
  rpc GetUserCount(GetUserCountRequest) returns (GetUserCountResponse) {}
}
message User{
  int32 ID = 1;
  string Email = 2;
  string Name = 3;
  string Password = 4;
  string Address = 5;
  string PhoneNumber =6;
  google.protobuf.Timestamp CreatedAt=7;
}
message UserWithRole{
  User user = 1;
  int32 Role = 2; // ADMIN, EMPLOYEE, CUSTOMER
  int32 branch_id = 3; // Chỉ dành cho EMPLOYEE và ADMIN
}
message CreateUserRequest {
  string Email = 1;
  string Name = 2;
  string PhoneNumber = 5;
}
message CreateUserResponse {
  string Status = 1;
  int32 user_id = 2; // Trả về thông tin người dùng đã tạo
}
message RegisterRequest{
  string Email = 1;
  string Password = 2;
  string Name = 3;
}
message RegisterResponse{
  string Status=1;
}
message LoginRequest{
  string Email = 1;
  string Password = 2;
  bool RememberMe=3;
}
message LoginResponse{
  string Status=1;
  string Token=2;
}
message ChangeInfoRequest{
  int32 Id=1;
  string Email=2;
  string Name=3;
  string PhoneNumber=4;
  string Address=5;
}
message ChangeInfoResponse{
  string Status=1;
  string Email=2;
  string Name=3;
  string PhoneNumber=4;
  string Address=5;
}
message ChangePasswordRequest{
  int32 Id=1;
  string OldPassword=2;
  string NewPassword=3;
}
message ChangePasswordResponse{
  string Status=1;
}
message GetUserInfoRequest{
  int32 ID=1;
}
message GetUserInfoByEmailRequest{
  string Email=1;
}
message VerifyEmailRequest {
  string Token = 1;
}

message VerifyEmailResponse {
  int32 Id = 1; // ID của user sau khi lưu vào DB
}
message ForgotPasswordRequest{
  string Email=1;
}
message ResetPasswordRequest{
  int32 UserID=3;
  string Token=1;
  string NewPassword=2;
}
message ResetPasswordResponse{
  string Status=1;
}
message ForgotPasswordResponse{
  string Status=1;
}
message GetAllCustomersRequest {
  // No parameters needed
}
message GetAllUsersRequest {
  // No parameters needed
}

message GetAllCustomersResponse {
  repeated User users = 1;
}
message GetAllUsersResponse {
  repeated UserWithRole users = 1;
}
message EditUserRequest {
  int32 ID = 1;
  string Email = 2;
  string Name = 3;
  string PhoneNumber = 4;
  string Address = 5;
  int32 Role = 6; // 1: CUSTOMER , 2: EMPLOYEE, 3: ADMIN
  int32 BranchID = 7; // Chỉ dành cho EMPLOYEE và ADMIN
}

message EditUserResponse {
  string Status = 1;
  UserWithRole user = 2; // Trả về thông tin người dùng đã chỉnh sửa
}
message GetCustomersPaginatedRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message GetCustomersPaginatedResponse {
  repeated User users = 1;
  int64 total = 2;
}

message GetCustomersByNameRequest {
  string name_filter = 1;
}

message GetCustomersByNameResponse {
  repeated User users = 1;
}
message GetBranchByEmployeeIDRequest {
  int32 employee_id = 1;
}
message GetBranchByEmployeeIDResponse {
  int32 branch_id = 1;
}
message GetUserCountRequest {
  // No parameters needed
}
message GetUserCountResponse {
  int32 count = 1; // Trả về tổng số người dùng
}