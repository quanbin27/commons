// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: records.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Pet message
type Pet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Species string  `protobuf:"bytes,3,opt,name=species,proto3" json:"species,omitempty"`
	Age     int32   `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	OwnerId string  `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Color   string  `protobuf:"bytes,6,opt,name=color,proto3" json:"color,omitempty"`     // Màu sắc
	Weight  float32 `protobuf:"fixed32,7,opt,name=weight,proto3" json:"weight,omitempty"` // Cân nặng (kg)
	Size    string  `protobuf:"bytes,8,opt,name=size,proto3" json:"size,omitempty"`       // Kích thước (e.g., "small", "medium", "large")
}

func (x *Pet) Reset() {
	*x = Pet{}
	mi := &file_records_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pet) ProtoMessage() {}

func (x *Pet) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pet.ProtoReflect.Descriptor instead.
func (*Pet) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{0}
}

func (x *Pet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pet) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

func (x *Pet) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Pet) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Pet) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Pet) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Pet) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

// Examination message
type Examination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PetId     string `protobuf:"bytes,2,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
	Date      string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"` // ISO 8601 format, e.g., "2025-03-02"
	VetId     string `protobuf:"bytes,4,opt,name=vet_id,json=vetId,proto3" json:"vet_id,omitempty"`
	Diagnosis string `protobuf:"bytes,5,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	Notes     string `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *Examination) Reset() {
	*x = Examination{}
	mi := &file_records_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Examination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Examination) ProtoMessage() {}

func (x *Examination) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Examination.ProtoReflect.Descriptor instead.
func (*Examination) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{1}
}

func (x *Examination) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Examination) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *Examination) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Examination) GetVetId() string {
	if x != nil {
		return x.VetId
	}
	return ""
}

func (x *Examination) GetDiagnosis() string {
	if x != nil {
		return x.Diagnosis
	}
	return ""
}

func (x *Examination) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// Vaccination message
type Vaccination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PetId       string `protobuf:"bytes,2,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
	VaccineName string `protobuf:"bytes,3,opt,name=vaccine_name,json=vaccineName,proto3" json:"vaccine_name,omitempty"`
	Date        string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`                         // ISO 8601 format, e.g., "2025-03-02"
	NextDose    string `protobuf:"bytes,5,opt,name=next_dose,json=nextDose,proto3" json:"next_dose,omitempty"` // ISO 8601 format, e.g., "2025-06-10"
	VetId       string `protobuf:"bytes,6,opt,name=vet_id,json=vetId,proto3" json:"vet_id,omitempty"`
}

func (x *Vaccination) Reset() {
	*x = Vaccination{}
	mi := &file_records_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vaccination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vaccination) ProtoMessage() {}

func (x *Vaccination) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vaccination.ProtoReflect.Descriptor instead.
func (*Vaccination) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{2}
}

func (x *Vaccination) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vaccination) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *Vaccination) GetVaccineName() string {
	if x != nil {
		return x.VaccineName
	}
	return ""
}

func (x *Vaccination) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Vaccination) GetNextDose() string {
	if x != nil {
		return x.NextDose
	}
	return ""
}

func (x *Vaccination) GetVetId() string {
	if x != nil {
		return x.VetId
	}
	return ""
}

// Medication message
type Medication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dosage    string `protobuf:"bytes,2,opt,name=dosage,proto3" json:"dosage,omitempty"`
	StartDate string `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // ISO 8601 format, e.g., "2025-03-02"
	EndDate   string `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // ISO 8601 format, e.g., "2025-03-09"
}

func (x *Medication) Reset() {
	*x = Medication{}
	mi := &file_records_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Medication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Medication) ProtoMessage() {}

func (x *Medication) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Medication.ProtoReflect.Descriptor instead.
func (*Medication) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{3}
}

func (x *Medication) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Medication) GetDosage() string {
	if x != nil {
		return x.Dosage
	}
	return ""
}

func (x *Medication) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Medication) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

// Prescription message
type Prescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExaminationId string `protobuf:"bytes,2,opt,name=examination_id,json=examinationId,proto3" json:"examination_id,omitempty"`
	// List of medications
	Medications []*Medication `protobuf:"bytes,3,rep,name=medications,proto3" json:"medications,omitempty"`
}

func (x *Prescription) Reset() {
	*x = Prescription{}
	mi := &file_records_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prescription) ProtoMessage() {}

func (x *Prescription) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prescription.ProtoReflect.Descriptor instead.
func (*Prescription) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{4}
}

func (x *Prescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Prescription) GetExaminationId() string {
	if x != nil {
		return x.ExaminationId
	}
	return ""
}

func (x *Prescription) GetMedications() []*Medication {
	if x != nil {
		return x.Medications
	}
	return nil
}

// --- Pet CRUD ---
type CreatePetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Species string `protobuf:"bytes,2,opt,name=species,proto3" json:"species,omitempty"`
	Age     int32  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	// Use int32 for Go compatibility
	OwnerId string  `protobuf:"bytes,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Color   string  `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
	Weight  float32 `protobuf:"fixed32,6,opt,name=weight,proto3" json:"weight,omitempty"`
	// Float for weight
	Size string `protobuf:"bytes,7,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CreatePetRequest) Reset() {
	*x = CreatePetRequest{}
	mi := &file_records_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePetRequest) ProtoMessage() {}

func (x *CreatePetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePetRequest.ProtoReflect.Descriptor instead.
func (*CreatePetRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePetRequest) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

func (x *CreatePetRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *CreatePetRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreatePetRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CreatePetRequest) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreatePetRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type CreatePetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreatePetResponse) Reset() {
	*x = CreatePetResponse{}
	mi := &file_records_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePetResponse) ProtoMessage() {}

func (x *CreatePetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePetResponse.ProtoReflect.Descriptor instead.
func (*CreatePetResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePetResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPetRequest) Reset() {
	*x = GetPetRequest{}
	mi := &file_records_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPetRequest) ProtoMessage() {}

func (x *GetPetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPetRequest.ProtoReflect.Descriptor instead.
func (*GetPetRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{7}
}

func (x *GetPetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pet *Pet `protobuf:"bytes,1,opt,name=pet,proto3" json:"pet,omitempty"`
}

func (x *GetPetResponse) Reset() {
	*x = GetPetResponse{}
	mi := &file_records_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPetResponse) ProtoMessage() {}

func (x *GetPetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPetResponse.ProtoReflect.Descriptor instead.
func (*GetPetResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{8}
}

func (x *GetPetResponse) GetPet() *Pet {
	if x != nil {
		return x.Pet
	}
	return nil
}

type UpdatePetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Species string  `protobuf:"bytes,3,opt,name=species,proto3" json:"species,omitempty"`
	Age     int32   `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	OwnerId string  `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Color   string  `protobuf:"bytes,6,opt,name=color,proto3" json:"color,omitempty"`
	Weight  float32 `protobuf:"fixed32,7,opt,name=weight,proto3" json:"weight,omitempty"`
	Size    string  `protobuf:"bytes,8,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *UpdatePetRequest) Reset() {
	*x = UpdatePetRequest{}
	mi := &file_records_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePetRequest) ProtoMessage() {}

func (x *UpdatePetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePetRequest.ProtoReflect.Descriptor instead.
func (*UpdatePetRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{9}
}

func (x *UpdatePetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePetRequest) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

func (x *UpdatePetRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UpdatePetRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *UpdatePetRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *UpdatePetRequest) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UpdatePetRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type UpdatePetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pet *Pet `protobuf:"bytes,1,opt,name=pet,proto3" json:"pet,omitempty"`
}

func (x *UpdatePetResponse) Reset() {
	*x = UpdatePetResponse{}
	mi := &file_records_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePetResponse) ProtoMessage() {}

func (x *UpdatePetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePetResponse.ProtoReflect.Descriptor instead.
func (*UpdatePetResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{10}
}

func (x *UpdatePetResponse) GetPet() *Pet {
	if x != nil {
		return x.Pet
	}
	return nil
}

type DeletePetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePetRequest) Reset() {
	*x = DeletePetRequest{}
	mi := &file_records_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePetRequest) ProtoMessage() {}

func (x *DeletePetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePetRequest.ProtoReflect.Descriptor instead.
func (*DeletePetRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{11}
}

func (x *DeletePetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeletePetResponse) Reset() {
	*x = DeletePetResponse{}
	mi := &file_records_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePetResponse) ProtoMessage() {}

func (x *DeletePetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePetResponse.ProtoReflect.Descriptor instead.
func (*DeletePetResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{12}
}

func (x *DeletePetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListPetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId string `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"` // Optional filter by owner
}

func (x *ListPetsRequest) Reset() {
	*x = ListPetsRequest{}
	mi := &file_records_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPetsRequest) ProtoMessage() {}

func (x *ListPetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPetsRequest.ProtoReflect.Descriptor instead.
func (*ListPetsRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{13}
}

func (x *ListPetsRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type ListPetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pets []*Pet `protobuf:"bytes,1,rep,name=pets,proto3" json:"pets,omitempty"`
}

func (x *ListPetsResponse) Reset() {
	*x = ListPetsResponse{}
	mi := &file_records_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPetsResponse) ProtoMessage() {}

func (x *ListPetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPetsResponse.ProtoReflect.Descriptor instead.
func (*ListPetsResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{14}
}

func (x *ListPetsResponse) GetPets() []*Pet {
	if x != nil {
		return x.Pets
	}
	return nil
}

// --- Examination CRUD ---
type CreateExaminationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId     string `protobuf:"bytes,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
	Date      string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	VetId     string `protobuf:"bytes,3,opt,name=vet_id,json=vetId,proto3" json:"vet_id,omitempty"`
	Diagnosis string `protobuf:"bytes,4,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	Notes     string `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *CreateExaminationRequest) Reset() {
	*x = CreateExaminationRequest{}
	mi := &file_records_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExaminationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExaminationRequest) ProtoMessage() {}

func (x *CreateExaminationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExaminationRequest.ProtoReflect.Descriptor instead.
func (*CreateExaminationRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{15}
}

func (x *CreateExaminationRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *CreateExaminationRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CreateExaminationRequest) GetVetId() string {
	if x != nil {
		return x.VetId
	}
	return ""
}

func (x *CreateExaminationRequest) GetDiagnosis() string {
	if x != nil {
		return x.Diagnosis
	}
	return ""
}

func (x *CreateExaminationRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type CreateExaminationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateExaminationResponse) Reset() {
	*x = CreateExaminationResponse{}
	mi := &file_records_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExaminationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExaminationResponse) ProtoMessage() {}

func (x *CreateExaminationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExaminationResponse.ProtoReflect.Descriptor instead.
func (*CreateExaminationResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{16}
}

func (x *CreateExaminationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetExaminationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetExaminationRequest) Reset() {
	*x = GetExaminationRequest{}
	mi := &file_records_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExaminationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExaminationRequest) ProtoMessage() {}

func (x *GetExaminationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExaminationRequest.ProtoReflect.Descriptor instead.
func (*GetExaminationRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{17}
}

func (x *GetExaminationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetExaminationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Examination *Examination `protobuf:"bytes,1,opt,name=examination,proto3" json:"examination,omitempty"`
}

func (x *GetExaminationResponse) Reset() {
	*x = GetExaminationResponse{}
	mi := &file_records_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExaminationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExaminationResponse) ProtoMessage() {}

func (x *GetExaminationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExaminationResponse.ProtoReflect.Descriptor instead.
func (*GetExaminationResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{18}
}

func (x *GetExaminationResponse) GetExamination() *Examination {
	if x != nil {
		return x.Examination
	}
	return nil
}

type UpdateExaminationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PetId     string `protobuf:"bytes,2,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
	Date      string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	VetId     string `protobuf:"bytes,4,opt,name=vet_id,json=vetId,proto3" json:"vet_id,omitempty"`
	Diagnosis string `protobuf:"bytes,5,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	Notes     string `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *UpdateExaminationRequest) Reset() {
	*x = UpdateExaminationRequest{}
	mi := &file_records_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExaminationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExaminationRequest) ProtoMessage() {}

func (x *UpdateExaminationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExaminationRequest.ProtoReflect.Descriptor instead.
func (*UpdateExaminationRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateExaminationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateExaminationRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *UpdateExaminationRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *UpdateExaminationRequest) GetVetId() string {
	if x != nil {
		return x.VetId
	}
	return ""
}

func (x *UpdateExaminationRequest) GetDiagnosis() string {
	if x != nil {
		return x.Diagnosis
	}
	return ""
}

func (x *UpdateExaminationRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type UpdateExaminationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Examination *Examination `protobuf:"bytes,1,opt,name=examination,proto3" json:"examination,omitempty"`
}

func (x *UpdateExaminationResponse) Reset() {
	*x = UpdateExaminationResponse{}
	mi := &file_records_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExaminationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExaminationResponse) ProtoMessage() {}

func (x *UpdateExaminationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExaminationResponse.ProtoReflect.Descriptor instead.
func (*UpdateExaminationResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateExaminationResponse) GetExamination() *Examination {
	if x != nil {
		return x.Examination
	}
	return nil
}

type DeleteExaminationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteExaminationRequest) Reset() {
	*x = DeleteExaminationRequest{}
	mi := &file_records_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExaminationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExaminationRequest) ProtoMessage() {}

func (x *DeleteExaminationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExaminationRequest.ProtoReflect.Descriptor instead.
func (*DeleteExaminationRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteExaminationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteExaminationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteExaminationResponse) Reset() {
	*x = DeleteExaminationResponse{}
	mi := &file_records_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExaminationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExaminationResponse) ProtoMessage() {}

func (x *DeleteExaminationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExaminationResponse.ProtoReflect.Descriptor instead.
func (*DeleteExaminationResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteExaminationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListExaminationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId string `protobuf:"bytes,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
}

func (x *ListExaminationsRequest) Reset() {
	*x = ListExaminationsRequest{}
	mi := &file_records_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExaminationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExaminationsRequest) ProtoMessage() {}

func (x *ListExaminationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExaminationsRequest.ProtoReflect.Descriptor instead.
func (*ListExaminationsRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{23}
}

func (x *ListExaminationsRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

type ListExaminationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Examinations []*Examination `protobuf:"bytes,1,rep,name=examinations,proto3" json:"examinations,omitempty"`
}

func (x *ListExaminationsResponse) Reset() {
	*x = ListExaminationsResponse{}
	mi := &file_records_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExaminationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExaminationsResponse) ProtoMessage() {}

func (x *ListExaminationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExaminationsResponse.ProtoReflect.Descriptor instead.
func (*ListExaminationsResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{24}
}

func (x *ListExaminationsResponse) GetExaminations() []*Examination {
	if x != nil {
		return x.Examinations
	}
	return nil
}

// --- Vaccination CRUD ---
type CreateVaccinationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId       string `protobuf:"bytes,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
	VaccineName string `protobuf:"bytes,2,opt,name=vaccine_name,json=vaccineName,proto3" json:"vaccine_name,omitempty"`
	Date        string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	NextDose    string `protobuf:"bytes,4,opt,name=next_dose,json=nextDose,proto3" json:"next_dose,omitempty"`
	VetId       string `protobuf:"bytes,5,opt,name=vet_id,json=vetId,proto3" json:"vet_id,omitempty"`
}

func (x *CreateVaccinationRequest) Reset() {
	*x = CreateVaccinationRequest{}
	mi := &file_records_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVaccinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVaccinationRequest) ProtoMessage() {}

func (x *CreateVaccinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVaccinationRequest.ProtoReflect.Descriptor instead.
func (*CreateVaccinationRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{25}
}

func (x *CreateVaccinationRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *CreateVaccinationRequest) GetVaccineName() string {
	if x != nil {
		return x.VaccineName
	}
	return ""
}

func (x *CreateVaccinationRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CreateVaccinationRequest) GetNextDose() string {
	if x != nil {
		return x.NextDose
	}
	return ""
}

func (x *CreateVaccinationRequest) GetVetId() string {
	if x != nil {
		return x.VetId
	}
	return ""
}

type CreateVaccinationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateVaccinationResponse) Reset() {
	*x = CreateVaccinationResponse{}
	mi := &file_records_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVaccinationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVaccinationResponse) ProtoMessage() {}

func (x *CreateVaccinationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVaccinationResponse.ProtoReflect.Descriptor instead.
func (*CreateVaccinationResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{26}
}

func (x *CreateVaccinationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVaccinationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVaccinationRequest) Reset() {
	*x = GetVaccinationRequest{}
	mi := &file_records_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVaccinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVaccinationRequest) ProtoMessage() {}

func (x *GetVaccinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVaccinationRequest.ProtoReflect.Descriptor instead.
func (*GetVaccinationRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{27}
}

func (x *GetVaccinationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVaccinationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vaccination *Vaccination `protobuf:"bytes,1,opt,name=vaccination,proto3" json:"vaccination,omitempty"`
}

func (x *GetVaccinationResponse) Reset() {
	*x = GetVaccinationResponse{}
	mi := &file_records_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVaccinationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVaccinationResponse) ProtoMessage() {}

func (x *GetVaccinationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVaccinationResponse.ProtoReflect.Descriptor instead.
func (*GetVaccinationResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{28}
}

func (x *GetVaccinationResponse) GetVaccination() *Vaccination {
	if x != nil {
		return x.Vaccination
	}
	return nil
}

type UpdateVaccinationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PetId       string `protobuf:"bytes,2,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
	VaccineName string `protobuf:"bytes,3,opt,name=vaccine_name,json=vaccineName,proto3" json:"vaccine_name,omitempty"`
	Date        string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	NextDose    string `protobuf:"bytes,5,opt,name=next_dose,json=nextDose,proto3" json:"next_dose,omitempty"`
	VetId       string `protobuf:"bytes,6,opt,name=vet_id,json=vetId,proto3" json:"vet_id,omitempty"`
}

func (x *UpdateVaccinationRequest) Reset() {
	*x = UpdateVaccinationRequest{}
	mi := &file_records_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVaccinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVaccinationRequest) ProtoMessage() {}

func (x *UpdateVaccinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVaccinationRequest.ProtoReflect.Descriptor instead.
func (*UpdateVaccinationRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateVaccinationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVaccinationRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *UpdateVaccinationRequest) GetVaccineName() string {
	if x != nil {
		return x.VaccineName
	}
	return ""
}

func (x *UpdateVaccinationRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *UpdateVaccinationRequest) GetNextDose() string {
	if x != nil {
		return x.NextDose
	}
	return ""
}

func (x *UpdateVaccinationRequest) GetVetId() string {
	if x != nil {
		return x.VetId
	}
	return ""
}

type UpdateVaccinationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vaccination *Vaccination `protobuf:"bytes,1,opt,name=vaccination,proto3" json:"vaccination,omitempty"`
}

func (x *UpdateVaccinationResponse) Reset() {
	*x = UpdateVaccinationResponse{}
	mi := &file_records_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVaccinationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVaccinationResponse) ProtoMessage() {}

func (x *UpdateVaccinationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVaccinationResponse.ProtoReflect.Descriptor instead.
func (*UpdateVaccinationResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateVaccinationResponse) GetVaccination() *Vaccination {
	if x != nil {
		return x.Vaccination
	}
	return nil
}

type DeleteVaccinationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteVaccinationRequest) Reset() {
	*x = DeleteVaccinationRequest{}
	mi := &file_records_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVaccinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVaccinationRequest) ProtoMessage() {}

func (x *DeleteVaccinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVaccinationRequest.ProtoReflect.Descriptor instead.
func (*DeleteVaccinationRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteVaccinationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteVaccinationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteVaccinationResponse) Reset() {
	*x = DeleteVaccinationResponse{}
	mi := &file_records_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVaccinationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVaccinationResponse) ProtoMessage() {}

func (x *DeleteVaccinationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVaccinationResponse.ProtoReflect.Descriptor instead.
func (*DeleteVaccinationResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteVaccinationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListVaccinationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetId string `protobuf:"bytes,1,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
}

func (x *ListVaccinationsRequest) Reset() {
	*x = ListVaccinationsRequest{}
	mi := &file_records_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVaccinationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVaccinationsRequest) ProtoMessage() {}

func (x *ListVaccinationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVaccinationsRequest.ProtoReflect.Descriptor instead.
func (*ListVaccinationsRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{33}
}

func (x *ListVaccinationsRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

type ListVaccinationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vaccinations []*Vaccination `protobuf:"bytes,1,rep,name=vaccinations,proto3" json:"vaccinations,omitempty"`
}

func (x *ListVaccinationsResponse) Reset() {
	*x = ListVaccinationsResponse{}
	mi := &file_records_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVaccinationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVaccinationsResponse) ProtoMessage() {}

func (x *ListVaccinationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVaccinationsResponse.ProtoReflect.Descriptor instead.
func (*ListVaccinationsResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{34}
}

func (x *ListVaccinationsResponse) GetVaccinations() []*Vaccination {
	if x != nil {
		return x.Vaccinations
	}
	return nil
}

// --- Prescription CRUD ---
type CreatePrescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExaminationId string        `protobuf:"bytes,1,opt,name=examination_id,json=examinationId,proto3" json:"examination_id,omitempty"`
	Medications   []*Medication `protobuf:"bytes,2,rep,name=medications,proto3" json:"medications,omitempty"`
}

func (x *CreatePrescriptionRequest) Reset() {
	*x = CreatePrescriptionRequest{}
	mi := &file_records_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrescriptionRequest) ProtoMessage() {}

func (x *CreatePrescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrescriptionRequest.ProtoReflect.Descriptor instead.
func (*CreatePrescriptionRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{35}
}

func (x *CreatePrescriptionRequest) GetExaminationId() string {
	if x != nil {
		return x.ExaminationId
	}
	return ""
}

func (x *CreatePrescriptionRequest) GetMedications() []*Medication {
	if x != nil {
		return x.Medications
	}
	return nil
}

type CreatePrescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreatePrescriptionResponse) Reset() {
	*x = CreatePrescriptionResponse{}
	mi := &file_records_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrescriptionResponse) ProtoMessage() {}

func (x *CreatePrescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrescriptionResponse.ProtoReflect.Descriptor instead.
func (*CreatePrescriptionResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{36}
}

func (x *CreatePrescriptionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPrescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPrescriptionRequest) Reset() {
	*x = GetPrescriptionRequest{}
	mi := &file_records_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionRequest) ProtoMessage() {}

func (x *GetPrescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionRequest.ProtoReflect.Descriptor instead.
func (*GetPrescriptionRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{37}
}

func (x *GetPrescriptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPrescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prescription *Prescription `protobuf:"bytes,1,opt,name=prescription,proto3" json:"prescription,omitempty"`
}

func (x *GetPrescriptionResponse) Reset() {
	*x = GetPrescriptionResponse{}
	mi := &file_records_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionResponse) ProtoMessage() {}

func (x *GetPrescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionResponse.ProtoReflect.Descriptor instead.
func (*GetPrescriptionResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{38}
}

func (x *GetPrescriptionResponse) GetPrescription() *Prescription {
	if x != nil {
		return x.Prescription
	}
	return nil
}

type UpdatePrescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExaminationId string        `protobuf:"bytes,2,opt,name=examination_id,json=examinationId,proto3" json:"examination_id,omitempty"`
	Medications   []*Medication `protobuf:"bytes,3,rep,name=medications,proto3" json:"medications,omitempty"`
}

func (x *UpdatePrescriptionRequest) Reset() {
	*x = UpdatePrescriptionRequest{}
	mi := &file_records_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrescriptionRequest) ProtoMessage() {}

func (x *UpdatePrescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrescriptionRequest.ProtoReflect.Descriptor instead.
func (*UpdatePrescriptionRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{39}
}

func (x *UpdatePrescriptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePrescriptionRequest) GetExaminationId() string {
	if x != nil {
		return x.ExaminationId
	}
	return ""
}

func (x *UpdatePrescriptionRequest) GetMedications() []*Medication {
	if x != nil {
		return x.Medications
	}
	return nil
}

type UpdatePrescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prescription *Prescription `protobuf:"bytes,1,opt,name=prescription,proto3" json:"prescription,omitempty"`
}

func (x *UpdatePrescriptionResponse) Reset() {
	*x = UpdatePrescriptionResponse{}
	mi := &file_records_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrescriptionResponse) ProtoMessage() {}

func (x *UpdatePrescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrescriptionResponse.ProtoReflect.Descriptor instead.
func (*UpdatePrescriptionResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{40}
}

func (x *UpdatePrescriptionResponse) GetPrescription() *Prescription {
	if x != nil {
		return x.Prescription
	}
	return nil
}

type DeletePrescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePrescriptionRequest) Reset() {
	*x = DeletePrescriptionRequest{}
	mi := &file_records_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePrescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrescriptionRequest) ProtoMessage() {}

func (x *DeletePrescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrescriptionRequest.ProtoReflect.Descriptor instead.
func (*DeletePrescriptionRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{41}
}

func (x *DeletePrescriptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePrescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeletePrescriptionResponse) Reset() {
	*x = DeletePrescriptionResponse{}
	mi := &file_records_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePrescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrescriptionResponse) ProtoMessage() {}

func (x *DeletePrescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrescriptionResponse.ProtoReflect.Descriptor instead.
func (*DeletePrescriptionResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{42}
}

func (x *DeletePrescriptionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListPrescriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExaminationId string `protobuf:"bytes,1,opt,name=examination_id,json=examinationId,proto3" json:"examination_id,omitempty"`
}

func (x *ListPrescriptionsRequest) Reset() {
	*x = ListPrescriptionsRequest{}
	mi := &file_records_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrescriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrescriptionsRequest) ProtoMessage() {}

func (x *ListPrescriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrescriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListPrescriptionsRequest) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{43}
}

func (x *ListPrescriptionsRequest) GetExaminationId() string {
	if x != nil {
		return x.ExaminationId
	}
	return ""
}

type ListPrescriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prescriptions []*Prescription `protobuf:"bytes,1,rep,name=prescriptions,proto3" json:"prescriptions,omitempty"`
}

func (x *ListPrescriptionsResponse) Reset() {
	*x = ListPrescriptionsResponse{}
	mi := &file_records_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrescriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrescriptionsResponse) ProtoMessage() {}

func (x *ListPrescriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrescriptionsResponse.ProtoReflect.Descriptor instead.
func (*ListPrescriptionsResponse) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{44}
}

func (x *ListPrescriptionsResponse) GetPrescriptions() []*Prescription {
	if x != nil {
		return x.Prescriptions
	}
	return nil
}

var File_records_proto protoreflect.FileDescriptor

var file_records_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x03, 0x50,
	0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61,
	0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x93, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x6f, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x6f, 0x73, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x76, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x65, 0x74, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x7e, 0x0a, 0x0c, 0x50,
	0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x23, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x70, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50,
	0x65, 0x74, 0x52, 0x03, 0x70, 0x65, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x35, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20,
	0x0a, 0x03, 0x70, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x65,
	0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x65, 0x74, 0x52, 0x03, 0x70, 0x65, 0x74,
	0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x36, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x50, 0x65, 0x74, 0x52, 0x04, 0x70, 0x65, 0x74, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b,
	0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x78,
	0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x76, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x69, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x69, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x65,
	0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x30, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x65, 0x74, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x61,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9c, 0x01,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x64, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x44, 0x6f, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x65, 0x74, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b,
	0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x56, 0x61,
	0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x76, 0x61, 0x63, 0x63, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xac, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61,
	0x63, 0x63, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x6f, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x6f, 0x73, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x76, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x65, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x30, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x0c, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x76, 0x61, 0x63,
	0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7b, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a,
	0x0b, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x72, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78,
	0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x59, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x65,
	0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x32, 0xa1, 0x0e, 0x0a, 0x10, 0x50, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x50, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x70,
	0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x74,
	0x12, 0x1b, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x65, 0x74,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x65, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x22, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x70,
	0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x22, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x63, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70,
	0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x65, 0x74,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x70, 0x65, 0x74, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_records_proto_rawDescOnce sync.Once
	file_records_proto_rawDescData = file_records_proto_rawDesc
)

func file_records_proto_rawDescGZIP() []byte {
	file_records_proto_rawDescOnce.Do(func() {
		file_records_proto_rawDescData = protoimpl.X.CompressGZIP(file_records_proto_rawDescData)
	})
	return file_records_proto_rawDescData
}

var file_records_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_records_proto_goTypes = []any{
	(*Pet)(nil),                        // 0: petrecord.Pet
	(*Examination)(nil),                // 1: petrecord.Examination
	(*Vaccination)(nil),                // 2: petrecord.Vaccination
	(*Medication)(nil),                 // 3: petrecord.Medication
	(*Prescription)(nil),               // 4: petrecord.Prescription
	(*CreatePetRequest)(nil),           // 5: petrecord.CreatePetRequest
	(*CreatePetResponse)(nil),          // 6: petrecord.CreatePetResponse
	(*GetPetRequest)(nil),              // 7: petrecord.GetPetRequest
	(*GetPetResponse)(nil),             // 8: petrecord.GetPetResponse
	(*UpdatePetRequest)(nil),           // 9: petrecord.UpdatePetRequest
	(*UpdatePetResponse)(nil),          // 10: petrecord.UpdatePetResponse
	(*DeletePetRequest)(nil),           // 11: petrecord.DeletePetRequest
	(*DeletePetResponse)(nil),          // 12: petrecord.DeletePetResponse
	(*ListPetsRequest)(nil),            // 13: petrecord.ListPetsRequest
	(*ListPetsResponse)(nil),           // 14: petrecord.ListPetsResponse
	(*CreateExaminationRequest)(nil),   // 15: petrecord.CreateExaminationRequest
	(*CreateExaminationResponse)(nil),  // 16: petrecord.CreateExaminationResponse
	(*GetExaminationRequest)(nil),      // 17: petrecord.GetExaminationRequest
	(*GetExaminationResponse)(nil),     // 18: petrecord.GetExaminationResponse
	(*UpdateExaminationRequest)(nil),   // 19: petrecord.UpdateExaminationRequest
	(*UpdateExaminationResponse)(nil),  // 20: petrecord.UpdateExaminationResponse
	(*DeleteExaminationRequest)(nil),   // 21: petrecord.DeleteExaminationRequest
	(*DeleteExaminationResponse)(nil),  // 22: petrecord.DeleteExaminationResponse
	(*ListExaminationsRequest)(nil),    // 23: petrecord.ListExaminationsRequest
	(*ListExaminationsResponse)(nil),   // 24: petrecord.ListExaminationsResponse
	(*CreateVaccinationRequest)(nil),   // 25: petrecord.CreateVaccinationRequest
	(*CreateVaccinationResponse)(nil),  // 26: petrecord.CreateVaccinationResponse
	(*GetVaccinationRequest)(nil),      // 27: petrecord.GetVaccinationRequest
	(*GetVaccinationResponse)(nil),     // 28: petrecord.GetVaccinationResponse
	(*UpdateVaccinationRequest)(nil),   // 29: petrecord.UpdateVaccinationRequest
	(*UpdateVaccinationResponse)(nil),  // 30: petrecord.UpdateVaccinationResponse
	(*DeleteVaccinationRequest)(nil),   // 31: petrecord.DeleteVaccinationRequest
	(*DeleteVaccinationResponse)(nil),  // 32: petrecord.DeleteVaccinationResponse
	(*ListVaccinationsRequest)(nil),    // 33: petrecord.ListVaccinationsRequest
	(*ListVaccinationsResponse)(nil),   // 34: petrecord.ListVaccinationsResponse
	(*CreatePrescriptionRequest)(nil),  // 35: petrecord.CreatePrescriptionRequest
	(*CreatePrescriptionResponse)(nil), // 36: petrecord.CreatePrescriptionResponse
	(*GetPrescriptionRequest)(nil),     // 37: petrecord.GetPrescriptionRequest
	(*GetPrescriptionResponse)(nil),    // 38: petrecord.GetPrescriptionResponse
	(*UpdatePrescriptionRequest)(nil),  // 39: petrecord.UpdatePrescriptionRequest
	(*UpdatePrescriptionResponse)(nil), // 40: petrecord.UpdatePrescriptionResponse
	(*DeletePrescriptionRequest)(nil),  // 41: petrecord.DeletePrescriptionRequest
	(*DeletePrescriptionResponse)(nil), // 42: petrecord.DeletePrescriptionResponse
	(*ListPrescriptionsRequest)(nil),   // 43: petrecord.ListPrescriptionsRequest
	(*ListPrescriptionsResponse)(nil),  // 44: petrecord.ListPrescriptionsResponse
}
var file_records_proto_depIdxs = []int32{
	3,  // 0: petrecord.Prescription.medications:type_name -> petrecord.Medication
	0,  // 1: petrecord.GetPetResponse.pet:type_name -> petrecord.Pet
	0,  // 2: petrecord.UpdatePetResponse.pet:type_name -> petrecord.Pet
	0,  // 3: petrecord.ListPetsResponse.pets:type_name -> petrecord.Pet
	1,  // 4: petrecord.GetExaminationResponse.examination:type_name -> petrecord.Examination
	1,  // 5: petrecord.UpdateExaminationResponse.examination:type_name -> petrecord.Examination
	1,  // 6: petrecord.ListExaminationsResponse.examinations:type_name -> petrecord.Examination
	2,  // 7: petrecord.GetVaccinationResponse.vaccination:type_name -> petrecord.Vaccination
	2,  // 8: petrecord.UpdateVaccinationResponse.vaccination:type_name -> petrecord.Vaccination
	2,  // 9: petrecord.ListVaccinationsResponse.vaccinations:type_name -> petrecord.Vaccination
	3,  // 10: petrecord.CreatePrescriptionRequest.medications:type_name -> petrecord.Medication
	4,  // 11: petrecord.GetPrescriptionResponse.prescription:type_name -> petrecord.Prescription
	3,  // 12: petrecord.UpdatePrescriptionRequest.medications:type_name -> petrecord.Medication
	4,  // 13: petrecord.UpdatePrescriptionResponse.prescription:type_name -> petrecord.Prescription
	4,  // 14: petrecord.ListPrescriptionsResponse.prescriptions:type_name -> petrecord.Prescription
	5,  // 15: petrecord.PetRecordService.CreatePet:input_type -> petrecord.CreatePetRequest
	7,  // 16: petrecord.PetRecordService.GetPet:input_type -> petrecord.GetPetRequest
	9,  // 17: petrecord.PetRecordService.UpdatePet:input_type -> petrecord.UpdatePetRequest
	11, // 18: petrecord.PetRecordService.DeletePet:input_type -> petrecord.DeletePetRequest
	13, // 19: petrecord.PetRecordService.ListPets:input_type -> petrecord.ListPetsRequest
	15, // 20: petrecord.PetRecordService.CreateExamination:input_type -> petrecord.CreateExaminationRequest
	17, // 21: petrecord.PetRecordService.GetExamination:input_type -> petrecord.GetExaminationRequest
	19, // 22: petrecord.PetRecordService.UpdateExamination:input_type -> petrecord.UpdateExaminationRequest
	21, // 23: petrecord.PetRecordService.DeleteExamination:input_type -> petrecord.DeleteExaminationRequest
	23, // 24: petrecord.PetRecordService.ListExaminations:input_type -> petrecord.ListExaminationsRequest
	25, // 25: petrecord.PetRecordService.CreateVaccination:input_type -> petrecord.CreateVaccinationRequest
	27, // 26: petrecord.PetRecordService.GetVaccination:input_type -> petrecord.GetVaccinationRequest
	29, // 27: petrecord.PetRecordService.UpdateVaccination:input_type -> petrecord.UpdateVaccinationRequest
	31, // 28: petrecord.PetRecordService.DeleteVaccination:input_type -> petrecord.DeleteVaccinationRequest
	33, // 29: petrecord.PetRecordService.ListVaccinations:input_type -> petrecord.ListVaccinationsRequest
	35, // 30: petrecord.PetRecordService.CreatePrescription:input_type -> petrecord.CreatePrescriptionRequest
	37, // 31: petrecord.PetRecordService.GetPrescription:input_type -> petrecord.GetPrescriptionRequest
	39, // 32: petrecord.PetRecordService.UpdatePrescription:input_type -> petrecord.UpdatePrescriptionRequest
	41, // 33: petrecord.PetRecordService.DeletePrescription:input_type -> petrecord.DeletePrescriptionRequest
	43, // 34: petrecord.PetRecordService.ListPrescriptions:input_type -> petrecord.ListPrescriptionsRequest
	6,  // 35: petrecord.PetRecordService.CreatePet:output_type -> petrecord.CreatePetResponse
	8,  // 36: petrecord.PetRecordService.GetPet:output_type -> petrecord.GetPetResponse
	10, // 37: petrecord.PetRecordService.UpdatePet:output_type -> petrecord.UpdatePetResponse
	12, // 38: petrecord.PetRecordService.DeletePet:output_type -> petrecord.DeletePetResponse
	14, // 39: petrecord.PetRecordService.ListPets:output_type -> petrecord.ListPetsResponse
	16, // 40: petrecord.PetRecordService.CreateExamination:output_type -> petrecord.CreateExaminationResponse
	18, // 41: petrecord.PetRecordService.GetExamination:output_type -> petrecord.GetExaminationResponse
	20, // 42: petrecord.PetRecordService.UpdateExamination:output_type -> petrecord.UpdateExaminationResponse
	22, // 43: petrecord.PetRecordService.DeleteExamination:output_type -> petrecord.DeleteExaminationResponse
	24, // 44: petrecord.PetRecordService.ListExaminations:output_type -> petrecord.ListExaminationsResponse
	26, // 45: petrecord.PetRecordService.CreateVaccination:output_type -> petrecord.CreateVaccinationResponse
	28, // 46: petrecord.PetRecordService.GetVaccination:output_type -> petrecord.GetVaccinationResponse
	30, // 47: petrecord.PetRecordService.UpdateVaccination:output_type -> petrecord.UpdateVaccinationResponse
	32, // 48: petrecord.PetRecordService.DeleteVaccination:output_type -> petrecord.DeleteVaccinationResponse
	34, // 49: petrecord.PetRecordService.ListVaccinations:output_type -> petrecord.ListVaccinationsResponse
	36, // 50: petrecord.PetRecordService.CreatePrescription:output_type -> petrecord.CreatePrescriptionResponse
	38, // 51: petrecord.PetRecordService.GetPrescription:output_type -> petrecord.GetPrescriptionResponse
	40, // 52: petrecord.PetRecordService.UpdatePrescription:output_type -> petrecord.UpdatePrescriptionResponse
	42, // 53: petrecord.PetRecordService.DeletePrescription:output_type -> petrecord.DeletePrescriptionResponse
	44, // 54: petrecord.PetRecordService.ListPrescriptions:output_type -> petrecord.ListPrescriptionsResponse
	35, // [35:55] is the sub-list for method output_type
	15, // [15:35] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_records_proto_init() }
func file_records_proto_init() {
	if File_records_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_records_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_records_proto_goTypes,
		DependencyIndexes: file_records_proto_depIdxs,
		MessageInfos:      file_records_proto_msgTypes,
	}.Build()
	File_records_proto = out.File
	file_records_proto_rawDesc = nil
	file_records_proto_goTypes = nil
	file_records_proto_depIdxs = nil
}
