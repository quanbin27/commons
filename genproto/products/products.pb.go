// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: products.proto

package products

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Food struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price        float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Imgurl       string  `protobuf:"bytes,7,opt,name=imgurl,proto3" json:"imgurl,omitempty"`
	IsAttachable bool    `protobuf:"varint,8,opt,name=is_attachable,json=isAttachable,proto3" json:"is_attachable,omitempty"`
}

func (x *Food) Reset() {
	*x = Food{}
	mi := &file_products_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Food) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Food) ProtoMessage() {}

func (x *Food) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Food.ProtoReflect.Descriptor instead.
func (*Food) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{0}
}

func (x *Food) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Food) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Food) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Food) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Food) GetImgurl() string {
	if x != nil {
		return x.Imgurl
	}
	return ""
}

func (x *Food) GetIsAttachable() bool {
	if x != nil {
		return x.IsAttachable
	}
	return false
}

type Accessory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price        float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Imgurl       string  `protobuf:"bytes,7,opt,name=imgurl,proto3" json:"imgurl,omitempty"`
	IsAttachable bool    `protobuf:"varint,8,opt,name=is_attachable,json=isAttachable,proto3" json:"is_attachable,omitempty"`
}

func (x *Accessory) Reset() {
	*x = Accessory{}
	mi := &file_products_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Accessory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accessory) ProtoMessage() {}

func (x *Accessory) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accessory.ProtoReflect.Descriptor instead.
func (*Accessory) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{1}
}

func (x *Accessory) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Accessory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Accessory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Accessory) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Accessory) GetImgurl() string {
	if x != nil {
		return x.Imgurl
	}
	return ""
}

func (x *Accessory) GetIsAttachable() bool {
	if x != nil {
		return x.IsAttachable
	}
	return false
}

type Medicine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price        float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Imgurl       string  `protobuf:"bytes,7,opt,name=imgurl,proto3" json:"imgurl,omitempty"`
	IsAttachable bool    `protobuf:"varint,8,opt,name=is_attachable,json=isAttachable,proto3" json:"is_attachable,omitempty"`
}

func (x *Medicine) Reset() {
	*x = Medicine{}
	mi := &file_products_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Medicine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Medicine) ProtoMessage() {}

func (x *Medicine) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Medicine.ProtoReflect.Descriptor instead.
func (*Medicine) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{2}
}

func (x *Medicine) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Medicine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Medicine) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Medicine) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Medicine) GetImgurl() string {
	if x != nil {
		return x.Imgurl
	}
	return ""
}

func (x *Medicine) GetIsAttachable() bool {
	if x != nil {
		return x.IsAttachable
	}
	return false
}

type GeneralProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description       string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Price             float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Imgurl            string  `protobuf:"bytes,4,opt,name=imgurl,proto3" json:"imgurl,omitempty"`
	ProductId         int32   `protobuf:"varint,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductType       string  `protobuf:"bytes,6,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`                    // "food", "accessory", "medicine"
	AvailableQuantity int32   `protobuf:"varint,7,opt,name=available_quantity,json=availableQuantity,proto3" json:"available_quantity,omitempty"` // Số lượng có sẵn tại các chi nhánh
	IsAttachable      bool    `protobuf:"varint,8,opt,name=is_attachable,json=isAttachable,proto3" json:"is_attachable,omitempty"`
}

func (x *GeneralProduct) Reset() {
	*x = GeneralProduct{}
	mi := &file_products_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneralProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralProduct) ProtoMessage() {}

func (x *GeneralProduct) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralProduct.ProtoReflect.Descriptor instead.
func (*GeneralProduct) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{3}
}

func (x *GeneralProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GeneralProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GeneralProduct) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GeneralProduct) GetImgurl() string {
	if x != nil {
		return x.Imgurl
	}
	return ""
}

func (x *GeneralProduct) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GeneralProduct) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *GeneralProduct) GetAvailableQuantity() int32 {
	if x != nil {
		return x.AvailableQuantity
	}
	return 0
}

func (x *GeneralProduct) GetIsAttachable() bool {
	if x != nil {
		return x.IsAttachable
	}
	return false
}

type Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *Branch) Reset() {
	*x = Branch{}
	mi := &file_products_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Branch.ProtoReflect.Descriptor instead.
func (*Branch) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{4}
}

func (x *Branch) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Branch) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type BranchProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId         int32  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ProductId        int32  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductType      string `protobuf:"bytes,3,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"` // "food", "accessory", "medicine"
	StockQuantity    int32  `protobuf:"varint,4,opt,name=stock_quantity,json=stockQuantity,proto3" json:"stock_quantity,omitempty"`
	ReservedQuantity int32  `protobuf:"varint,5,opt,name=reserved_quantity,json=reservedQuantity,proto3" json:"reserved_quantity,omitempty"`
}

func (x *BranchProduct) Reset() {
	*x = BranchProduct{}
	mi := &file_products_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BranchProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BranchProduct) ProtoMessage() {}

func (x *BranchProduct) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BranchProduct.ProtoReflect.Descriptor instead.
func (*BranchProduct) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{5}
}

func (x *BranchProduct) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *BranchProduct) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *BranchProduct) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *BranchProduct) GetStockQuantity() int32 {
	if x != nil {
		return x.StockQuantity
	}
	return 0
}

func (x *BranchProduct) GetReservedQuantity() int32 {
	if x != nil {
		return x.ReservedQuantity
	}
	return 0
}

type GetFoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFoodRequest) Reset() {
	*x = GetFoodRequest{}
	mi := &file_products_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFoodRequest) ProtoMessage() {}

func (x *GetFoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFoodRequest.ProtoReflect.Descriptor instead.
func (*GetFoodRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{6}
}

func (x *GetFoodRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAccessoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAccessoryRequest) Reset() {
	*x = GetAccessoryRequest{}
	mi := &file_products_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccessoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessoryRequest) ProtoMessage() {}

func (x *GetAccessoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessoryRequest.ProtoReflect.Descriptor instead.
func (*GetAccessoryRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{7}
}

func (x *GetAccessoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMedicineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMedicineRequest) Reset() {
	*x = GetMedicineRequest{}
	mi := &file_products_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMedicineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicineRequest) ProtoMessage() {}

func (x *GetMedicineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicineRequest.ProtoReflect.Descriptor instead.
func (*GetMedicineRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{8}
}

func (x *GetMedicineRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBranchRequest) Reset() {
	*x = GetBranchRequest{}
	mi := &file_products_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchRequest) ProtoMessage() {}

func (x *GetBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchRequest.ProtoReflect.Descriptor instead.
func (*GetBranchRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{9}
}

func (x *GetBranchRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListFoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFoodRequest) Reset() {
	*x = ListFoodRequest{}
	mi := &file_products_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFoodRequest) ProtoMessage() {}

func (x *ListFoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFoodRequest.ProtoReflect.Descriptor instead.
func (*ListFoodRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{10}
}

type ListAccessoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAccessoryRequest) Reset() {
	*x = ListAccessoryRequest{}
	mi := &file_products_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccessoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessoryRequest) ProtoMessage() {}

func (x *ListAccessoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessoryRequest.ProtoReflect.Descriptor instead.
func (*ListAccessoryRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{11}
}

type ListMedicineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMedicineRequest) Reset() {
	*x = ListMedicineRequest{}
	mi := &file_products_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMedicineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMedicineRequest) ProtoMessage() {}

func (x *ListMedicineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMedicineRequest.ProtoReflect.Descriptor instead.
func (*ListMedicineRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{12}
}

type ListBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBranchRequest) Reset() {
	*x = ListBranchRequest{}
	mi := &file_products_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBranchRequest) ProtoMessage() {}

func (x *ListBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBranchRequest.ProtoReflect.Descriptor instead.
func (*ListBranchRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{13}
}

type ListAttachableProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAttachableProductsRequest) Reset() {
	*x = ListAttachableProductsRequest{}
	mi := &file_products_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAttachableProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttachableProductsRequest) ProtoMessage() {}

func (x *ListAttachableProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttachableProductsRequest.ProtoReflect.Descriptor instead.
func (*ListAttachableProductsRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{14}
}

type ListAllProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAllProductsRequest) Reset() {
	*x = ListAllProductsRequest{}
	mi := &file_products_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllProductsRequest) ProtoMessage() {}

func (x *ListAllProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllProductsRequest.ProtoReflect.Descriptor instead.
func (*ListAllProductsRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{15}
}

type ListAttachableProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*GeneralProduct `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *ListAttachableProductsResponse) Reset() {
	*x = ListAttachableProductsResponse{}
	mi := &file_products_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAttachableProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttachableProductsResponse) ProtoMessage() {}

func (x *ListAttachableProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttachableProductsResponse.ProtoReflect.Descriptor instead.
func (*ListAttachableProductsResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{16}
}

func (x *ListAttachableProductsResponse) GetProducts() []*GeneralProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type ListAllProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*GeneralProduct `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *ListAllProductsResponse) Reset() {
	*x = ListAllProductsResponse{}
	mi := &file_products_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllProductsResponse) ProtoMessage() {}

func (x *ListAllProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllProductsResponse.ProtoReflect.Descriptor instead.
func (*ListAllProductsResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{17}
}

func (x *ListAllProductsResponse) GetProducts() []*GeneralProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type ListFoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foods []*Food `protobuf:"bytes,1,rep,name=foods,proto3" json:"foods,omitempty"`
}

func (x *ListFoodResponse) Reset() {
	*x = ListFoodResponse{}
	mi := &file_products_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFoodResponse) ProtoMessage() {}

func (x *ListFoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFoodResponse.ProtoReflect.Descriptor instead.
func (*ListFoodResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{18}
}

func (x *ListFoodResponse) GetFoods() []*Food {
	if x != nil {
		return x.Foods
	}
	return nil
}

type ListAccessoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accessories []*Accessory `protobuf:"bytes,1,rep,name=accessories,proto3" json:"accessories,omitempty"`
}

func (x *ListAccessoryResponse) Reset() {
	*x = ListAccessoryResponse{}
	mi := &file_products_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccessoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessoryResponse) ProtoMessage() {}

func (x *ListAccessoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessoryResponse.ProtoReflect.Descriptor instead.
func (*ListAccessoryResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{19}
}

func (x *ListAccessoryResponse) GetAccessories() []*Accessory {
	if x != nil {
		return x.Accessories
	}
	return nil
}

type ListMedicineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Medicines []*Medicine `protobuf:"bytes,1,rep,name=medicines,proto3" json:"medicines,omitempty"`
}

func (x *ListMedicineResponse) Reset() {
	*x = ListMedicineResponse{}
	mi := &file_products_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMedicineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMedicineResponse) ProtoMessage() {}

func (x *ListMedicineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMedicineResponse.ProtoReflect.Descriptor instead.
func (*ListMedicineResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{20}
}

func (x *ListMedicineResponse) GetMedicines() []*Medicine {
	if x != nil {
		return x.Medicines
	}
	return nil
}

type ListBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branches []*Branch `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (x *ListBranchResponse) Reset() {
	*x = ListBranchResponse{}
	mi := &file_products_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBranchResponse) ProtoMessage() {}

func (x *ListBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBranchResponse.ProtoReflect.Descriptor instead.
func (*ListBranchResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{21}
}

func (x *ListBranchResponse) GetBranches() []*Branch {
	if x != nil {
		return x.Branches
	}
	return nil
}

type CreateFoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *CreateFoodRequest) Reset() {
	*x = CreateFoodRequest{}
	mi := &file_products_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFoodRequest) ProtoMessage() {}

func (x *CreateFoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFoodRequest.ProtoReflect.Descriptor instead.
func (*CreateFoodRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{22}
}

func (x *CreateFoodRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFoodRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateFoodRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CreateAccessoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *CreateAccessoryRequest) Reset() {
	*x = CreateAccessoryRequest{}
	mi := &file_products_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccessoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessoryRequest) ProtoMessage() {}

func (x *CreateAccessoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessoryRequest.ProtoReflect.Descriptor instead.
func (*CreateAccessoryRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{23}
}

func (x *CreateAccessoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAccessoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAccessoryRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CreateMedicineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *CreateMedicineRequest) Reset() {
	*x = CreateMedicineRequest{}
	mi := &file_products_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMedicineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMedicineRequest) ProtoMessage() {}

func (x *CreateMedicineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMedicineRequest.ProtoReflect.Descriptor instead.
func (*CreateMedicineRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{24}
}

func (x *CreateMedicineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMedicineRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateMedicineRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CreateFoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateFoodResponse) Reset() {
	*x = CreateFoodResponse{}
	mi := &file_products_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFoodResponse) ProtoMessage() {}

func (x *CreateFoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFoodResponse.ProtoReflect.Descriptor instead.
func (*CreateFoodResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{25}
}

func (x *CreateFoodResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateAccessoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateAccessoryResponse) Reset() {
	*x = CreateAccessoryResponse{}
	mi := &file_products_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccessoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessoryResponse) ProtoMessage() {}

func (x *CreateAccessoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessoryResponse.ProtoReflect.Descriptor instead.
func (*CreateAccessoryResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{26}
}

func (x *CreateAccessoryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateMedicineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateMedicineResponse) Reset() {
	*x = CreateMedicineResponse{}
	mi := &file_products_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMedicineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMedicineResponse) ProtoMessage() {}

func (x *CreateMedicineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMedicineResponse.ProtoReflect.Descriptor instead.
func (*CreateMedicineResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{27}
}

func (x *CreateMedicineResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateFoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateFoodRequest) Reset() {
	*x = UpdateFoodRequest{}
	mi := &file_products_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFoodRequest) ProtoMessage() {}

func (x *UpdateFoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFoodRequest.ProtoReflect.Descriptor instead.
func (*UpdateFoodRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateFoodRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFoodRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateFoodRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateFoodRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type UpdateAccessoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateAccessoryRequest) Reset() {
	*x = UpdateAccessoryRequest{}
	mi := &file_products_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccessoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccessoryRequest) ProtoMessage() {}

func (x *UpdateAccessoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccessoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccessoryRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateAccessoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAccessoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAccessoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAccessoryRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type UpdateMedicineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateMedicineRequest) Reset() {
	*x = UpdateMedicineRequest{}
	mi := &file_products_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMedicineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMedicineRequest) ProtoMessage() {}

func (x *UpdateMedicineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMedicineRequest.ProtoReflect.Descriptor instead.
func (*UpdateMedicineRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateMedicineRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMedicineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMedicineRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMedicineRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type UpdateFoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateFoodResponse) Reset() {
	*x = UpdateFoodResponse{}
	mi := &file_products_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFoodResponse) ProtoMessage() {}

func (x *UpdateFoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFoodResponse.ProtoReflect.Descriptor instead.
func (*UpdateFoodResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateFoodResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateAccessoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateAccessoryResponse) Reset() {
	*x = UpdateAccessoryResponse{}
	mi := &file_products_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccessoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccessoryResponse) ProtoMessage() {}

func (x *UpdateAccessoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccessoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccessoryResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateAccessoryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateMedicineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateMedicineResponse) Reset() {
	*x = UpdateMedicineResponse{}
	mi := &file_products_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMedicineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMedicineResponse) ProtoMessage() {}

func (x *UpdateMedicineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMedicineResponse.ProtoReflect.Descriptor instead.
func (*UpdateMedicineResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateMedicineResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteFoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFoodRequest) Reset() {
	*x = DeleteFoodRequest{}
	mi := &file_products_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFoodRequest) ProtoMessage() {}

func (x *DeleteFoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFoodRequest.ProtoReflect.Descriptor instead.
func (*DeleteFoodRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteFoodRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAccessoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAccessoryRequest) Reset() {
	*x = DeleteAccessoryRequest{}
	mi := &file_products_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccessoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccessoryRequest) ProtoMessage() {}

func (x *DeleteAccessoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccessoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccessoryRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteAccessoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMedicineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMedicineRequest) Reset() {
	*x = DeleteMedicineRequest{}
	mi := &file_products_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMedicineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMedicineRequest) ProtoMessage() {}

func (x *DeleteMedicineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMedicineRequest.ProtoReflect.Descriptor instead.
func (*DeleteMedicineRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteMedicineRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteFoodResponse) Reset() {
	*x = DeleteFoodResponse{}
	mi := &file_products_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFoodResponse) ProtoMessage() {}

func (x *DeleteFoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFoodResponse.ProtoReflect.Descriptor instead.
func (*DeleteFoodResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteFoodResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteAccessoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteAccessoryResponse) Reset() {
	*x = DeleteAccessoryResponse{}
	mi := &file_products_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccessoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccessoryResponse) ProtoMessage() {}

func (x *DeleteAccessoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccessoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccessoryResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteAccessoryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteMedicineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteMedicineResponse) Reset() {
	*x = DeleteMedicineResponse{}
	mi := &file_products_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMedicineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMedicineResponse) ProtoMessage() {}

func (x *DeleteMedicineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMedicineResponse.ProtoReflect.Descriptor instead.
func (*DeleteMedicineResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteMedicineResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetBranchInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId int32 `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *GetBranchInventoryRequest) Reset() {
	*x = GetBranchInventoryRequest{}
	mi := &file_products_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchInventoryRequest) ProtoMessage() {}

func (x *GetBranchInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetBranchInventoryRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{40}
}

func (x *GetBranchInventoryRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

type GetBranchInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory []*BranchProduct `protobuf:"bytes,1,rep,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *GetBranchInventoryResponse) Reset() {
	*x = GetBranchInventoryResponse{}
	mi := &file_products_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBranchInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchInventoryResponse) ProtoMessage() {}

func (x *GetBranchInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetBranchInventoryResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{41}
}

func (x *GetBranchInventoryResponse) GetInventory() []*BranchProduct {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type UpdateBranchInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId         int32  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ProductId        int32  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductType      string `protobuf:"bytes,3,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	StockQuantity    int32  `protobuf:"varint,4,opt,name=stock_quantity,json=stockQuantity,proto3" json:"stock_quantity,omitempty"`
	ReservedQuantity int32  `protobuf:"varint,5,opt,name=reserved_quantity,json=reservedQuantity,proto3" json:"reserved_quantity,omitempty"`
}

func (x *UpdateBranchInventoryRequest) Reset() {
	*x = UpdateBranchInventoryRequest{}
	mi := &file_products_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBranchInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBranchInventoryRequest) ProtoMessage() {}

func (x *UpdateBranchInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBranchInventoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateBranchInventoryRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateBranchInventoryRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *UpdateBranchInventoryRequest) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateBranchInventoryRequest) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *UpdateBranchInventoryRequest) GetStockQuantity() int32 {
	if x != nil {
		return x.StockQuantity
	}
	return 0
}

func (x *UpdateBranchInventoryRequest) GetReservedQuantity() int32 {
	if x != nil {
		return x.ReservedQuantity
	}
	return 0
}

type UpdateBranchInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateBranchInventoryResponse) Reset() {
	*x = UpdateBranchInventoryResponse{}
	mi := &file_products_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBranchInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBranchInventoryResponse) ProtoMessage() {}

func (x *UpdateBranchInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBranchInventoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateBranchInventoryResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateBranchInventoryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListAvailableProductsByBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId    int32  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ProductType string `protobuf:"bytes,2,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"` // optional: "food", "accessory", "medicine"
}

func (x *ListAvailableProductsByBranchRequest) Reset() {
	*x = ListAvailableProductsByBranchRequest{}
	mi := &file_products_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableProductsByBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableProductsByBranchRequest) ProtoMessage() {}

func (x *ListAvailableProductsByBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableProductsByBranchRequest.ProtoReflect.Descriptor instead.
func (*ListAvailableProductsByBranchRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{44}
}

func (x *ListAvailableProductsByBranchRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *ListAvailableProductsByBranchRequest) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

type ListAvailableProductsByBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*GeneralProduct `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *ListAvailableProductsByBranchResponse) Reset() {
	*x = ListAvailableProductsByBranchResponse{}
	mi := &file_products_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableProductsByBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableProductsByBranchResponse) ProtoMessage() {}

func (x *ListAvailableProductsByBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableProductsByBranchResponse.ProtoReflect.Descriptor instead.
func (*ListAvailableProductsByBranchResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{45}
}

func (x *ListAvailableProductsByBranchResponse) GetProducts() []*GeneralProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type ListAvailableAllProductsByBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId int32 `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *ListAvailableAllProductsByBranchRequest) Reset() {
	*x = ListAvailableAllProductsByBranchRequest{}
	mi := &file_products_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableAllProductsByBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableAllProductsByBranchRequest) ProtoMessage() {}

func (x *ListAvailableAllProductsByBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableAllProductsByBranchRequest.ProtoReflect.Descriptor instead.
func (*ListAvailableAllProductsByBranchRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{46}
}

func (x *ListAvailableAllProductsByBranchRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

type ListAvailableAllProductsByBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*GeneralProduct `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *ListAvailableAllProductsByBranchResponse) Reset() {
	*x = ListAvailableAllProductsByBranchResponse{}
	mi := &file_products_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableAllProductsByBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableAllProductsByBranchResponse) ProtoMessage() {}

func (x *ListAvailableAllProductsByBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableAllProductsByBranchResponse.ProtoReflect.Descriptor instead.
func (*ListAvailableAllProductsByBranchResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{47}
}

func (x *ListAvailableAllProductsByBranchResponse) GetProducts() []*GeneralProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type ReserveProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId    int32  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ProductId   int32  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductType string `protobuf:"bytes,3,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	Quantity    int32  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReserveProductRequest) Reset() {
	*x = ReserveProductRequest{}
	mi := &file_products_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveProductRequest) ProtoMessage() {}

func (x *ReserveProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveProductRequest.ProtoReflect.Descriptor instead.
func (*ReserveProductRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{48}
}

func (x *ReserveProductRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *ReserveProductRequest) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ReserveProductRequest) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *ReserveProductRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReserveProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReserveProductResponse) Reset() {
	*x = ReserveProductResponse{}
	mi := &file_products_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveProductResponse) ProtoMessage() {}

func (x *ReserveProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveProductResponse.ProtoReflect.Descriptor instead.
func (*ReserveProductResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{49}
}

func (x *ReserveProductResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReserveProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfirmPickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId    int32  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ProductId   int32  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductType string `protobuf:"bytes,3,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	Quantity    int32  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ConfirmPickupRequest) Reset() {
	*x = ConfirmPickupRequest{}
	mi := &file_products_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmPickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPickupRequest) ProtoMessage() {}

func (x *ConfirmPickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPickupRequest.ProtoReflect.Descriptor instead.
func (*ConfirmPickupRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{50}
}

func (x *ConfirmPickupRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *ConfirmPickupRequest) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ConfirmPickupRequest) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *ConfirmPickupRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ConfirmPickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ConfirmPickupResponse) Reset() {
	*x = ConfirmPickupResponse{}
	mi := &file_products_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmPickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPickupResponse) ProtoMessage() {}

func (x *ConfirmPickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPickupResponse.ProtoReflect.Descriptor instead.
func (*ConfirmPickupResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{51}
}

func (x *ConfirmPickupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfirmPickupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReleaseReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId    int32  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ProductId   int32  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductType string `protobuf:"bytes,3,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	Quantity    int32  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReleaseReservationRequest) Reset() {
	*x = ReleaseReservationRequest{}
	mi := &file_products_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseReservationRequest) ProtoMessage() {}

func (x *ReleaseReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseReservationRequest.ProtoReflect.Descriptor instead.
func (*ReleaseReservationRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{52}
}

func (x *ReleaseReservationRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *ReleaseReservationRequest) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ReleaseReservationRequest) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *ReleaseReservationRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReleaseReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReleaseReservationResponse) Reset() {
	*x = ReleaseReservationResponse{}
	mi := &file_products_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseReservationResponse) ProtoMessage() {}

func (x *ReleaseReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseReservationResponse.ProtoReflect.Descriptor instead.
func (*ReleaseReservationResponse) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{53}
}

func (x *ReleaseReservationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReleaseReservationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_products_proto protoreflect.FileDescriptor

var file_products_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9f, 0x01, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d,
	0x67, 0x75, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x08, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x8a, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x48, 0x0a, 0x06,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x0d, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2b,
	0x0a, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x20, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x4d, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22,
	0x46, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x66,
	0x6f, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x6f, 0x6f,
	0x64, 0x52, 0x05, 0x66, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x79, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x3f, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x73,
	0x22, 0x39, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x64, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x63, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6f, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x74, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x73, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2c, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x31, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x4a,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x09,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xd1, 0x01, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x37,
	0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x66, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x42, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x54, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x42, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x57, 0x0a,
	0x28, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x4c, 0x0a, 0x16, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x4b, 0x0a,
	0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x19, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x50, 0x0a, 0x1a, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xa5, 0x0e, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46,
	0x6f, 0x6f, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x22,
	0x00, 0x12, 0x36, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x79, 0x42, 0x79, 0x49, 0x44, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x13, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x10, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x6f, 0x6f, 0x64, 0x12, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x79, 0x12, 0x17, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x12,
	0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64,
	0x12, 0x12, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x12, 0x17,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x17, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6e, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x12, 0x25, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x42, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x77, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x28, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x42, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12,
	0x15, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x12, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x75, 0x61, 0x6e,
	0x62, 0x69, 0x6e, 0x32, 0x37, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_products_proto_rawDescOnce sync.Once
	file_products_proto_rawDescData = file_products_proto_rawDesc
)

func file_products_proto_rawDescGZIP() []byte {
	file_products_proto_rawDescOnce.Do(func() {
		file_products_proto_rawDescData = protoimpl.X.CompressGZIP(file_products_proto_rawDescData)
	})
	return file_products_proto_rawDescData
}

var file_products_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_products_proto_goTypes = []any{
	(*Food)(nil),                                     // 0: Food
	(*Accessory)(nil),                                // 1: Accessory
	(*Medicine)(nil),                                 // 2: Medicine
	(*GeneralProduct)(nil),                           // 3: GeneralProduct
	(*Branch)(nil),                                   // 4: Branch
	(*BranchProduct)(nil),                            // 5: BranchProduct
	(*GetFoodRequest)(nil),                           // 6: GetFoodRequest
	(*GetAccessoryRequest)(nil),                      // 7: GetAccessoryRequest
	(*GetMedicineRequest)(nil),                       // 8: GetMedicineRequest
	(*GetBranchRequest)(nil),                         // 9: GetBranchRequest
	(*ListFoodRequest)(nil),                          // 10: ListFoodRequest
	(*ListAccessoryRequest)(nil),                     // 11: ListAccessoryRequest
	(*ListMedicineRequest)(nil),                      // 12: ListMedicineRequest
	(*ListBranchRequest)(nil),                        // 13: ListBranchRequest
	(*ListAttachableProductsRequest)(nil),            // 14: ListAttachableProductsRequest
	(*ListAllProductsRequest)(nil),                   // 15: ListAllProductsRequest
	(*ListAttachableProductsResponse)(nil),           // 16: ListAttachableProductsResponse
	(*ListAllProductsResponse)(nil),                  // 17: ListAllProductsResponse
	(*ListFoodResponse)(nil),                         // 18: ListFoodResponse
	(*ListAccessoryResponse)(nil),                    // 19: ListAccessoryResponse
	(*ListMedicineResponse)(nil),                     // 20: ListMedicineResponse
	(*ListBranchResponse)(nil),                       // 21: ListBranchResponse
	(*CreateFoodRequest)(nil),                        // 22: CreateFoodRequest
	(*CreateAccessoryRequest)(nil),                   // 23: CreateAccessoryRequest
	(*CreateMedicineRequest)(nil),                    // 24: CreateMedicineRequest
	(*CreateFoodResponse)(nil),                       // 25: CreateFoodResponse
	(*CreateAccessoryResponse)(nil),                  // 26: CreateAccessoryResponse
	(*CreateMedicineResponse)(nil),                   // 27: CreateMedicineResponse
	(*UpdateFoodRequest)(nil),                        // 28: UpdateFoodRequest
	(*UpdateAccessoryRequest)(nil),                   // 29: UpdateAccessoryRequest
	(*UpdateMedicineRequest)(nil),                    // 30: UpdateMedicineRequest
	(*UpdateFoodResponse)(nil),                       // 31: UpdateFoodResponse
	(*UpdateAccessoryResponse)(nil),                  // 32: UpdateAccessoryResponse
	(*UpdateMedicineResponse)(nil),                   // 33: UpdateMedicineResponse
	(*DeleteFoodRequest)(nil),                        // 34: DeleteFoodRequest
	(*DeleteAccessoryRequest)(nil),                   // 35: DeleteAccessoryRequest
	(*DeleteMedicineRequest)(nil),                    // 36: DeleteMedicineRequest
	(*DeleteFoodResponse)(nil),                       // 37: DeleteFoodResponse
	(*DeleteAccessoryResponse)(nil),                  // 38: DeleteAccessoryResponse
	(*DeleteMedicineResponse)(nil),                   // 39: DeleteMedicineResponse
	(*GetBranchInventoryRequest)(nil),                // 40: GetBranchInventoryRequest
	(*GetBranchInventoryResponse)(nil),               // 41: GetBranchInventoryResponse
	(*UpdateBranchInventoryRequest)(nil),             // 42: UpdateBranchInventoryRequest
	(*UpdateBranchInventoryResponse)(nil),            // 43: UpdateBranchInventoryResponse
	(*ListAvailableProductsByBranchRequest)(nil),     // 44: ListAvailableProductsByBranchRequest
	(*ListAvailableProductsByBranchResponse)(nil),    // 45: ListAvailableProductsByBranchResponse
	(*ListAvailableAllProductsByBranchRequest)(nil),  // 46: ListAvailableAllProductsByBranchRequest
	(*ListAvailableAllProductsByBranchResponse)(nil), // 47: ListAvailableAllProductsByBranchResponse
	(*ReserveProductRequest)(nil),                    // 48: ReserveProductRequest
	(*ReserveProductResponse)(nil),                   // 49: ReserveProductResponse
	(*ConfirmPickupRequest)(nil),                     // 50: ConfirmPickupRequest
	(*ConfirmPickupResponse)(nil),                    // 51: ConfirmPickupResponse
	(*ReleaseReservationRequest)(nil),                // 52: ReleaseReservationRequest
	(*ReleaseReservationResponse)(nil),               // 53: ReleaseReservationResponse
}
var file_products_proto_depIdxs = []int32{
	3,  // 0: ListAttachableProductsResponse.products:type_name -> GeneralProduct
	3,  // 1: ListAllProductsResponse.products:type_name -> GeneralProduct
	0,  // 2: ListFoodResponse.foods:type_name -> Food
	1,  // 3: ListAccessoryResponse.accessories:type_name -> Accessory
	2,  // 4: ListMedicineResponse.medicines:type_name -> Medicine
	4,  // 5: ListBranchResponse.branches:type_name -> Branch
	5,  // 6: GetBranchInventoryResponse.inventory:type_name -> BranchProduct
	3,  // 7: ListAvailableProductsByBranchResponse.products:type_name -> GeneralProduct
	3,  // 8: ListAvailableAllProductsByBranchResponse.products:type_name -> GeneralProduct
	6,  // 9: ProductService.GetFoodByID:input_type -> GetFoodRequest
	7,  // 10: ProductService.GetAccessoryByID:input_type -> GetAccessoryRequest
	8,  // 11: ProductService.GetMedicineByID:input_type -> GetMedicineRequest
	10, // 12: ProductService.ListFoods:input_type -> ListFoodRequest
	11, // 13: ProductService.ListAccessories:input_type -> ListAccessoryRequest
	12, // 14: ProductService.ListMedicines:input_type -> ListMedicineRequest
	22, // 15: ProductService.CreateFood:input_type -> CreateFoodRequest
	23, // 16: ProductService.CreateAccessory:input_type -> CreateAccessoryRequest
	24, // 17: ProductService.CreateMedicine:input_type -> CreateMedicineRequest
	28, // 18: ProductService.UpdateFood:input_type -> UpdateFoodRequest
	29, // 19: ProductService.UpdateAccessory:input_type -> UpdateAccessoryRequest
	30, // 20: ProductService.UpdateMedicine:input_type -> UpdateMedicineRequest
	34, // 21: ProductService.DeleteFood:input_type -> DeleteFoodRequest
	35, // 22: ProductService.DeleteAccessory:input_type -> DeleteAccessoryRequest
	36, // 23: ProductService.DeleteMedicine:input_type -> DeleteMedicineRequest
	9,  // 24: ProductService.GetBranchByID:input_type -> GetBranchRequest
	13, // 25: ProductService.ListBranches:input_type -> ListBranchRequest
	40, // 26: ProductService.GetBranchInventory:input_type -> GetBranchInventoryRequest
	42, // 27: ProductService.UpdateBranchInventory:input_type -> UpdateBranchInventoryRequest
	14, // 28: ProductService.ListAttachableProducts:input_type -> ListAttachableProductsRequest
	15, // 29: ProductService.ListAllProducts:input_type -> ListAllProductsRequest
	44, // 30: ProductService.ListAvailableProductsByBranch:input_type -> ListAvailableProductsByBranchRequest
	46, // 31: ProductService.ListAvailableAllProductsByBranch:input_type -> ListAvailableAllProductsByBranchRequest
	48, // 32: ProductService.ReserveProduct:input_type -> ReserveProductRequest
	50, // 33: ProductService.ConfirmPickup:input_type -> ConfirmPickupRequest
	52, // 34: ProductService.ReleaseReservation:input_type -> ReleaseReservationRequest
	0,  // 35: ProductService.GetFoodByID:output_type -> Food
	1,  // 36: ProductService.GetAccessoryByID:output_type -> Accessory
	2,  // 37: ProductService.GetMedicineByID:output_type -> Medicine
	18, // 38: ProductService.ListFoods:output_type -> ListFoodResponse
	19, // 39: ProductService.ListAccessories:output_type -> ListAccessoryResponse
	20, // 40: ProductService.ListMedicines:output_type -> ListMedicineResponse
	25, // 41: ProductService.CreateFood:output_type -> CreateFoodResponse
	26, // 42: ProductService.CreateAccessory:output_type -> CreateAccessoryResponse
	27, // 43: ProductService.CreateMedicine:output_type -> CreateMedicineResponse
	31, // 44: ProductService.UpdateFood:output_type -> UpdateFoodResponse
	32, // 45: ProductService.UpdateAccessory:output_type -> UpdateAccessoryResponse
	33, // 46: ProductService.UpdateMedicine:output_type -> UpdateMedicineResponse
	37, // 47: ProductService.DeleteFood:output_type -> DeleteFoodResponse
	38, // 48: ProductService.DeleteAccessory:output_type -> DeleteAccessoryResponse
	39, // 49: ProductService.DeleteMedicine:output_type -> DeleteMedicineResponse
	4,  // 50: ProductService.GetBranchByID:output_type -> Branch
	21, // 51: ProductService.ListBranches:output_type -> ListBranchResponse
	41, // 52: ProductService.GetBranchInventory:output_type -> GetBranchInventoryResponse
	43, // 53: ProductService.UpdateBranchInventory:output_type -> UpdateBranchInventoryResponse
	16, // 54: ProductService.ListAttachableProducts:output_type -> ListAttachableProductsResponse
	17, // 55: ProductService.ListAllProducts:output_type -> ListAllProductsResponse
	45, // 56: ProductService.ListAvailableProductsByBranch:output_type -> ListAvailableProductsByBranchResponse
	47, // 57: ProductService.ListAvailableAllProductsByBranch:output_type -> ListAvailableAllProductsByBranchResponse
	49, // 58: ProductService.ReserveProduct:output_type -> ReserveProductResponse
	51, // 59: ProductService.ConfirmPickup:output_type -> ConfirmPickupResponse
	53, // 60: ProductService.ReleaseReservation:output_type -> ReleaseReservationResponse
	35, // [35:61] is the sub-list for method output_type
	9,  // [9:35] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_products_proto_init() }
func file_products_proto_init() {
	if File_products_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_products_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_products_proto_goTypes,
		DependencyIndexes: file_products_proto_depIdxs,
		MessageInfos:      file_products_proto_msgTypes,
	}.Build()
	File_products_proto = out.File
	file_products_proto_rawDesc = nil
	file_products_proto_goTypes = nil
	file_products_proto_depIdxs = nil
}
